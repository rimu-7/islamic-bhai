"use client";

import { useState } from "react";
import { Button } from "./ui/button";
import ErrorReportPopup from "./ErrorReportPopup";
import { AlertTriangle } from "lucide-react";

export default function ConfirmationMessage() {
  const [showErrorPopup, setShowErrorPopup] = useState(false);

  return (
    <div className="max-w-6xl mx-auto my-10 px-4 sm:px-6 md:px-8 py-8 sm:py-10  bg-gradient-to-br from-green-50 via-white to-green-100">
      {/* Header */}
      <h2 className="text-3xl sm:text-4xl md:text-5xl font-extrabold bg-gradient-to-r from-purple-500 via-teal-500 to-red-500 text-transparent bg-clip-text p-4 mb-6 text-center">
        тЬж ржЖрж▓рж╣рж╛ржоржжрзБрж▓рж┐рж▓рзНрж▓рж╛рж╣ тЬж
      </h2>
      <div className="text-start">
        {/* Description */}
        <p className="text-gray-800 leading-relaxed text-start text-base sm:text-lg md:text-xl">
          ржЖржорж░рж╛ ржЖржорж╛ржжрзЗрж░ рж╕рж░рзНржмрзЛржЪрзНржЪ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзЗржЫрж┐ ржЖржкржирж╛ржжрзЗрж░ ржХрж╛ржЫрзЗ{" "}
          <span className="font-semibold text-green-700">
            ржкрзНрж░ржорж╛ржг-рж╕рж╣, ржмрж┐рж╢рзНржмрж╕рзНржд рж╣рж╛ржжрж┐рж╕
          </span>{" "}
          ржПржмржВ{" "}
          <span className="font-semibold text-green-700">
            ржЖрж╕рж▓ ржЗрж╕рж▓рж╛ржорж┐ржХ ржХржиржЯрзЗржирзНржЯ
          </span>{" "}
          ржкрзМржБржЫрзЗ ржжрж┐рждрзЗред
        </p>

        {/* Highlights */}
        <ul className="mt-6 list-disc list-inside text-gray-700 space-y-4">
          <li className="text-sm sm:text-base md:text-lg">
            ржкрзНрж░рждрж┐ржЯрж┐ рж╣рж╛ржжрж┐рж╕рзЗрж░ рж╕рж╛ржерзЗ ржЙрзОрж╕ ржПржмржВ рж░рзЗржлрж╛рж░рзЗржирзНрж╕ ржкрзНрж░ржжрж░рзНрж╢рж┐ржд рж╣ржпрж╝рзЗржЫрзЗред
          </li>

          <li className="flex flex-col sm:flex-row items-start sm:items-center gap-3 text-sm sm:text-base md:text-lg">
            рж╕ржирзНржжрзЗрж╣ржЬржиржХ ржмрж╛ ржжрзБрж░рзНржмрж▓ рж╣рж╛ржжрж┐рж╕ рж╕рж╣ржЬрзЗржЗ
            <Button
              onClick={() => setShowErrorPopup(true)}
              className="font-semibold px-5 py-2 rounded-2xl bg-red-500 text-white shadow-md hover:shadow-lg hover:bg-red-600 transition-all duration-300 flex items-center gap-2 text-sm sm:text-base md:text-lg"
            >
              <AlertTriangle className="w-4 h-4 sm:w-5 sm:h-5" />
              ржнрзБрж▓ рж░рж┐ржкрзЛрж░рзНржЯ
            </Button>{" "}
            ржмрзЛрждрж╛ржорзЗрж░ ржорж╛ржзрзНржпржорзЗ рж░рж┐ржкрзЛрж░рзНржЯ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред
          </li>

          <li className="text-sm sm:text-base md:text-lg">
            ржЖржкржирж╛рж░ рж░рж┐ржкрзЛрж░рзНржЯ ржЖржорж╛ржжрзЗрж░ржХрзЗ ржЙржирзНржиржд ржПржмржВ ржирж┐рж░рзНржнрж░ржпрзЛржЧрзНржп ржХржиржЯрзЗржирзНржЯ рждрзИрж░рж┐ ржХрж░рждрзЗ
            рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░ржмрзЗред
          </li>
        </ul>

        {/* Additional info */}
        <p className="text-gray-800 mt-6 text-start text-sm sm:text-base md:text-lg">
          ржЖржкржирж╛рж░ ржорждрж╛ржоржд ржПржмржВ рж░рж┐ржкрзЛрж░рзНржЯ ржЖржорж╛ржжрзЗрж░ ржЬржирзНржп ржЕржорзВрж▓рзНржпред ржЖржорж░рж╛ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░ржЫрж┐
          ржкрзНрж░рждрж┐ржирж┐ржпрж╝ржд ржЙржирзНржиржд ржПржмржВ ржкрж░рж┐рж╖рзНржХрж╛рж░ рждржерзНржп рж╕рж░ржмрж░рж╛рж╣ ржХрж░рж╛рж░ред
        </p>

        {/* Footer */}
        <p className="bg-gradient-to-r from-yellow-500 via-red-500 to-pink-500 text-transparent bg-clip-text mt-6 font-semibold text-center text-lg sm:text-xl md:text-2xl">
          ржЬрж╛ржпрж╛ржХрж╛рж▓рзНрж▓рж╛рж╣ ржЦрж╛ржЗрж░рж╛ржи ЁЯМ┐
        </p>
      </div>
      {/* Popup */}
      <ErrorReportPopup
        isOpen={showErrorPopup}
        onClose={() => setShowErrorPopup(false)}
      />
    </div>
  );
}
